plugin.tx_dinnerclub {
	settings {
		registrationCountLimit = {$plugin.tx_dinnerclub.settings.registrationCountLimit}
		afterDeadlineMessageShort = {$plugin.tx_dinnerclub.settings.afterDeadlineMessageShort}
		afterDeadlineMessageVerbose = {$plugin.tx_dinnerclub.settings.afterDeadlineMessageVerbose}
		maximumReachedMessageShort = {$plugin.tx_dinnerclub.settings.maximumReachedMessageShort}
		maximumReachedMessageVerbose = {$plugin.tx_dinnerclub.settings.maximumReachedMessageVerbose}
		deadlineMessageSameDay = {$plugin.tx_dinnerclub.settings.deadlineMessageSameDay}
		deadlineMessagedayBefore = {$plugin.tx_dinnerclub.settings.deadlineMessagedayBefore}
		startPage = {$plugin.tx_dinnerclub.settings.startPage}
		dinnerClubRegistrationFormPid = {$plugin.tx_dinnerclub.settings.registrationFormPid}
		defaultDetailPid = {$plugin.tx_dinnerclub.settings.detailPid}
		dinnerClubRegistrationPid = {$plugin.tx_dinnerclub.settings.registrationPid}
		dinnerClubRegistrationOverviewPid = {$plugin.tx_dinnerclub.settings.registrationOverviewPid}
		dinnerClubRegistrationModificationPid = {$plugin.tx_dinnerclub.settings.registrationModificationPid}
		privacyStatementPage = {$plugin.tx_dinnerclub.settings.privacyStatementPage}

		additionalNotificationEmails = {$plugin.tx_dinnerclub.settings.additionalNotificationEmails}
		emailSubject = {$plugin.tx_dinnerclub.settings.emailSubject}
		emailFrequencyHours = {$plugin.tx_dinnerclub.settings.emailFrequencyHours}
		replyToEmail = {$plugin.tx_dinnerclub.settings.replyToEmail}
		returnPathEmail = {$plugin.tx_dinnerclub.settings.returnPathEmail}
	}
}

plugin.tx_news {
	view {
		templateRootPaths {
			40 = EXT:dinnerclub/Resources/Private/Templates/
		}
		partialRootPaths {
			40 = EXT:dinnerclub/Resources/Private/Partials/
		}
		layoutRootPaths {
			40 = EXT:dinnerclub/Resources/Private/Layouts/News/
		}
	}
	settings {
		defaultDetailPid = {$plugin.tx_dinnerclub.settings.detailPid}
# TODO remove these
		dinnerClubRegistrationFormPid = {$plugin.tx_dinnerclub.settings.registrationFormPid}
		dinnerClubRegistrationPid = {$plugin.tx_dinnerclub.settings.registrationPid}
		dinnerClubRegistrationOverviewPid = {$plugin.tx_dinnerclub.settings.registrationOverviewPid}
		dinnerClubRegistrationModificationPid = {$plugin.tx_dinnerclub.settings.registrationModificationPid}
		dinnerclub {
# TODO use these!
			registrationFormPid = {$plugin.tx_dinnerclub.settings.registrationFormPid}
			registrationPid = {$plugin.tx_dinnerclub.settings.registrationPid}
			registrationOverviewPid = {$plugin.tx_dinnerclub.settings.registrationOverviewPid}
			registrationModificationPid = {$plugin.tx_dinnerclub.settings.registrationModificationPid}
			privacyStatementPage = {$plugin.tx_dinnerclub.settings.privacyStatementPage}
		}
	}
}

plugin.tx_dinnerclub {
	view {
		templateRootPaths {
			10 = EXT:dinnerclub/Resources/Private/Templates/
		}
		partialRootPaths {
			10 = EXT:dinnerclub/Resources/Private/Partials/
		}
		layoutRootPaths {
			10 = EXT:dinnerclub/Resources/Private/Layouts/
		}
	}
}

lib.mainmenu = HMENU
lib.mainmenu {
	wrap = <ul class="nav nav-pills pull-right">|</ul>

	1 = TMENU
	1.NO = 1
	1.NO.wrapItemAndSub = <li role="presentation">|</li>

	1.CUR = 1
	1.CUR.wrapItemAndSub = <li role="presentation" class="active">|</li>
}

page = PAGE

page.includeCSS {
	bootstrap = EXT:dinnerclub/Resources/Public/CSS/bootstrap.min.css
	bootstrap-theme = EXT:dinnerclub/Resources/Public/CSS/bootstrap-theme.min.css
	css-styled-content = EXT:dinnerclub/Resources/Public/CSS/css-styled-content.css
	jumbotron = EXT:dinnerclub/Resources/Public/CSS/jumbotron-narrow.css
	formvalidator = EXT:dinnerclub/Resources/Public/CSS/validator.css
	print = EXT:dinnerclub/Resources/Public/CSS/print.css
	print.media = print
}

page.includeJS {
	// bootstrap = EXT:dinnerclub/Resources/Public/JavaScript/bootstrap.min.js
}

page.shortcutIcon = EXT:dinnerclub/Resources/Public/Icons/favicon.ico

page.cssInline.10 = FILES
page.cssInline.10 {
	references {
		data = levelmedia:-1,slide
	}
	renderObj = TEXT
	renderObj {
		typolink.parameter.data = file:current:publicUrl
		typolink.returnLast = url

		wrap (
			body {
				background: url(|);
				background-size: 100%;
			}
		)
	}
}


page.10 = FLUIDTEMPLATE
page.10 {
	extbase {
		controllerExtensionName = Dinnerclub
	}
	variables {
		leftContent < styles.content.getLeft
		leftContent.slide = -1
		content < styles.content.get
		menu < lib.mainmenu
		footerContent < styles.content.getBorder
		footerContent.slide = -1
	}
	layoutRootPath = EXT:dinnerclub/Resources/Private/Layouts/Page/
	file = EXT:dinnerclub/Resources/Private/Templates/Page/default.html
}


config.tx_extbase.objects {
	CP\Dinnerclub\Controller\RegistrationController {
		className = CP\Dinnerclub\Controller\RegistrationController
	}
}

config.tx_extbase.persistence.classes {
	CP\Dinnerclub\Domain\Model\DinnerclubEvent {
		mapping {
			recordType = 60
			tableName = tx_news_domain_model_news
			columns {
				tx_dinnerclub_notification_emails.mapOnProperty = notificationEmails
				tx_dinnerclub_notification_last_notification.mapOnProperty = lastNotification
				tx_dinnerclub_flags.mapOnProperty = flags
				tx_dinnerclub_registration_limit.mapOnProperty = registrationLimit
			}
		}
	}
}

# section_frame
tt_content.stdWrap.innerWrap.cObject {
	# Dinnerclub Jumbotron
	60 =< tt_content.stdWrap.innerWrap.cObject.default
	60.20.10.value := appendString( jumbotron)
}
